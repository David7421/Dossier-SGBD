CREATE OR REPLACE TRIGGER COPIECOTESAVIS
BEFORE INSERT OR UPDATE ON EVALUATION
FOR EACH ROW
DECLARE
  checkException exception;
  pragma exception_init(checkException, -2291);
BEGIN
	IF :NEW.TOKEN IS NULL THEN
		:NEW.TOKEN := 'OK';
		LOGEVENT('CBB : TRIGGER COPIECOTESAVIS', 'Debut de copie');

			IF (INSERTING) THEN
				INSERT INTO EVALUATION@CB.DBL (IDFILM, LOGIN, COTE, AVIS, DATEEVAL, TOKEN)
				VALUES (:NEW.IDFILM, :NEW.LOGIN, :NEW.COTE, :NEW.AVIS, :NEW.DATEEVAL, :NEW.TOKEN);
			END IF;

			IF (UPDATING) THEN
				UPDATE EVALUATION@CB.DBL
				SET	COTE = :NEW.COTE,
					AVIS = :NEW.AVIS,
					DATEEVAL = :NEW.DATEEVAL,
					TOKEN = :NEW.TOKEN
				WHERE	IDFILM = :NEW.IDFILM AND LOGIN = :NEW.LOGIN;
			END IF;
	END IF;

EXCEPTION
	WHEN checkException THEN :NEW.TOKEN := 'KO'; LOGEVENT('CBB : TRIGGER COPIECOTESAVIS', 'Copie ratee (Foreign Key) => ' || SQLCODE || ' : ' || SQLERRM);
	WHEN OTHERS THEN LOGEVENT('CBB : TRIGGER COPIECOTESAVIS', 'Copie ratee => ' || SQLCODE || ' : ' || SQLERRM); RAISE;
END;
/

COMMIT;
